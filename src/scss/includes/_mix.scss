/* mixins **********************/
//
//  В этом файле находятся миксины для создания стилей на ретина экранах
//  и создания стиля при наведении.
//
//
// обьявляем переменные
//
$path: "../img/";
$type: "png";
$pixel: px;
$zero: 0;

//
// добавляем миксин - для ретина экранов с указанием ширины и длинны,
// добавлено условие для отображения ширины и высоты
// добавлена переменная count, она нужна для расчета ширины блока при наведении
//
@mixin retina($file, $width : 0, $height : 0, $count : 1) {
  background-image: url($path + $file + '.' + $type);

  @if $width == 0 {

  } @else {
    width: $width + $pixel;
  }

  @if $height == 0 {

  } @else {
    height: $height + $pixel;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (-moz-min-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-device-pixel-ratio: 2),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
    & {
      background-image: url($path + $file + '@2x.' + $type);

      @if $count == 1 {
        -webkit-background-size: $width * 1 + $pixel $height + $pixel;
        -moz-background-size: $width * 1 + $pixel $height + $pixel;
        -o-background-size: $width * 1 + $pixel $height + $pixel;
        background-size: $width * 1 + $pixel $height + $pixel;
      } @else {
        -webkit-background-size: $width * 2 + $pixel $height + $pixel;
        -moz-background-size: $width * 2 + $pixel $height + $pixel;
        -o-background-size: $width * 2 + $pixel $height + $pixel;
        background-size: $width * 2 + $pixel $height + $pixel;
      }
    }
  }
}

//
// миксин для центрирования блоков
//
@mixin center() {
  margin-right: auto;
  margin-left: auto;
}

//
// миксин для центирирования блоков без указания ширины
//
@mixin table-center() {
  display: table;
  margin-right: auto;
  margin-left: auto;
}

//
// миксин для центирирования блоков без указания ширины
//
@mixin block-center($width : 0) {
  @if $width == 0 {

  } @else {
    width: $width + $pixel;
  }
  display: block;
  margin-right: auto;
  margin-left: auto;
}

//
// миксин нужен для изменения "background-position" у спрайта
// при наведении
//
@mixin after-hover($width) {
  &:after {
    content: "";
    position: absolute;
    top: $zero + $pixel;
    left: $zero + $pixel;
  }

  &:hover {
    cursor: pointer;

    &:after {
      background-position: -$width + $pixel $zero;
    }
  }
}

//
// миксин для центирования спрайта внутри блока
//
@mixin after-hover-center($width, $height) {
  &:after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: -$width / 2 + $pixel;
    margin-top: -$height/ 2 + $pixel;
  }

  &:hover {
    cursor: pointer;

    &:after {
      background-position: -$width + $pixel $zero;
    }
  }
}

//
// простой миксин для указания ширины и высоты
//
@mixin width-height($width, $height) {
  width: $width + $pixel;
  height: $height + $pixel;
}

//
// простой миксин для добавления кросбраузерного
// border-radius
//
@mixin border-radius($border-radius...) {
  border-radius: ($border-radius);
  -moz-border-radius: ($border-radius);
  -webkit-border-radius: ($border-radius);
}

//
// миксин для обрезки текста,
// не обязательный параметр $width
//
@mixin ellipsis($width : 0) {
  @if $width == 0 {

  } @else {
    width: $width + $pixel;
  }
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  display: block;
}

//
// миксин для обнуления float (clearfix)
//
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }

  &:after {
    clear: both;
  }
}

//
// запрет выделения текста
//
@mixin user-select() {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

//
// добавляет box-sizing ко всем элементам
//
@mixin box-sizing() {
  html {
    box-sizing: border-box;
  }

  *,
  *:before,
  *:after {
    box-sizing: inherit;
  }
}

//
// миксин для кроссбраузерного transition
//
@mixin transition($transition-property...) {
  -webkit-transition: $transition-property;
  -moz-transition: $transition-property;
  -ms-transition: $transition-property;
  -o-transition: $transition-property;
  transition: $transition-property;
}

//
// миксин для кроссбраузерного transform
//
@mixin transform($transform-property...) {
  -moz-transform: $transform-property;
  -ms-transform: $transform-property;
  -webkit-transform: $transform-property;
  -o-transform: $transform-property;
  transform: $transform-property;
}

//
// миксин для выделения ошибок на странице
//
@mixin errorCSS() {

  // пустые элементы заливает желтым цветом
  div:empty,
  span:empty,
  li:empty,
  p:empty,
  td:empty,
  th:empty {
    padding: .5em ! important;
    background: yellow ! important;
  }

  // все картинки и ссылки оборачиваем рамкой в 5 пикселей
  // если есть атрибут style
  // если есть атрибут href у тега a
  *[style],
  img,
  a[href],
  font,
  center {
    outline: 5px solid #c087ff ! important;
  }

  // все кнопки оборачиваем рамкой в 3 пикселей
  button {
    outline: 3px solid #c48416 ! important;
  }

  // все таблицы оборачиваем рамкой в 5 пикселей
  table,
  th {
    border: 5px solid red ! important;
  }

  //если есть заполненые атрибуты alt и title не выделяем
  img[alt][title] {
    outline-width: 0 ! important;
  }

  //если есть атрибут alt у картинки
  img[alt] {
    outline-color: fuchsia ! important;
  }

  //если есть атрибуты alt и title у картинки
  img[alt],
  img[title] {
    outline-style: double ! important;
  }

  //если один из атрибутов alt или title пустой, а другой заполненый
  img[alt=""][title],
  img[alt][title=""] {
    outline-width: 3px ! important;
  }

  //если один атрибуты alt и title пустые
  img[alt=""][title=""] {
    outline-style: dotted ! important;
  }

  table[summary],
  th[scope="col"],
  th[scope="row"] {
    border: 1px solid #aaa ! important;
  }

  //если есть заполненый атрибут title не выделяем
  a [ title ] {
    outline-width: 0 ! important;
  }

  //если есть пустой атрибут title
  a [ title = "" ] {
    outline-width: 3 ! important;
  }

  //если есть пустой атрибут href равен #
  a [ href = "#" ] {
    background: lime ! important;
  }

  //если есть пустой атрибут href
  a [ href = "" ] {
    background: fuchsia ! important;
  }
}

//
//миксин для указания позиции блоков
//синтаксис @include position (0,0,0,0);
//
@mixin position($top : null, $right : null, $bottom : null, $left : null) {
  @if $top == null {

  } @else {
    top: $top + $pixel;
  }

  @if $right == null {

  } @else {
    right: $right + $pixel;
  }

  @if $bottom == null {

  } @else {
    bottom: $bottom + $pixel;
  }

  @if $left == null {

  } @else {
    left: $left + $pixel;
  }
}

//mixins bs3
// Vendor Prefixes
//
// All vendor mixins are deprecated as of v3.2.0 due to the introduction of
// Autoprefixer in our Gruntfile. They will be removed in v4.
// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Placeholder text
// - Transformations
// - Transitions
// - User Select
// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
  animation-timing-function: $timing-function;
}

@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
  animation-iteration-count: $iteration-count;
}

@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
  animation-direction: $direction;
}

@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
  animation-fill-mode: $fill-mode;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
  -webkit-column-count: $column-count;
  -moz-column-count: $column-count;
  column-count: $column-count;
  -webkit-column-gap: $column-gap;
  -moz-column-gap: $column-gap;
  column-gap: $column-gap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
  -moz-hyphens: $mode;
  -ms-hyphens: $mode; // IE10+
  -o-hyphens: $mode;
  hyphens: $mode;
}

// Placeholder text
@mixin placeholder($color: rgba(0, 0, 0, 0.5)) {
  &::-moz-placeholder {
    color: $color; // Firefox
    opacity: 1;
  }

  // See https://github.com/twbs/bootstrap/pull/11526
  &:-ms-input-placeholder {
    color: $color;
  }

  // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: $color;
  }

  // Safari and Chrome
}

// Transformations
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
  -ms-transform: scale($ratio); // IE9 only
  -o-transform: scale($ratio);
  transform: scale($ratio);
}

@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
  -ms-transform: scaleX($ratio); // IE9 only
  -o-transform: scaleX($ratio);
  transform: scaleX($ratio);
}

@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
  -ms-transform: scaleY($ratio); // IE9 only
  -o-transform: scaleY($ratio);
  transform: scaleY($ratio);
}

@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  -o-transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y);
}

@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y); // IE9 only
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees); // IE9 only
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}

@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
  -ms-transform: rotateX($degrees); // IE9 only
  -o-transform: rotateX($degrees);
  transform: rotateX($degrees);
}

@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
  -ms-transform: rotateY($degrees); // IE9 only
  -o-transform: rotateY($degrees);
  transform: rotateY($degrees);
}

@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}

@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}

@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin; // IE9 only
  transform-origin: $origin;
}

// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
  transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}

@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
  transition-timing-function: $timing-function;
}

@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select; // IE10+
  user-select: $select;
}

// mixins custom
@mixin absolute() {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  display: block;
}

@mixin btn-size($p, $fz, $h) {
  font-weight: $fw-bold;
  padding-left: $p;
  padding-right: $p;
  font-size: $fz;
  height: $h;
  line-height: $h - 3px;
}

@mixin btn-color($bg, $bc, $c) {
  border-color: $bc;
  color: $c;
  background: $bg;

  &:hover {
    color: $c;
    border-color: darken(desaturate($bc, 20%), 2%);
    background-color: darken(desaturate($bg, 20%), 2%);
  }
  &:active {
    color: $c;
    border-color: darken(desaturate($bc, 20%), 8%);
    background-color: darken(desaturate($bg, 20%), 8%);
  }
}

@mixin reset-last-indent() {
  > *:last-child {
    margin-bottom: 0 !important;
  }
}

@mixin reset-list() {
  list-style: none;
  margin-bottom: 0;
  padding-left: 0;

  li {
    margin-bottom: 0;
  }
}

@mixin width($size) {
  flex: 0 0 auto;
  flex-basis: $size;
  max-width: $size;
}

@mixin white-content() {
  &,
  *,
  a:hover,
  a:focus {
    color: white;
    fill: white;
  }
  a {
    text-decoration: none;
    border-bottom: 1px solid rgba(255,255,255,.2);

    &:hover {
      border-bottom-color: transparent;
      text-decoration: none;
    }
  }
}

@mixin cols($size) {
  display: flex;
  margin-left: -$size;
  margin-right: -$size;

  > * {
    padding-left: $size;
    padding-right: $size;
  }
}

@mixin bg-cover() {
  @include absolute;
  overflow: hidden;

  > * {
    @include absolute;
    background-size: cover;
    background-position: center center;
  }
}

@mixin img-cover() {
  @include absolute;
  overflow: hidden;

  > img {
    object-fit: cover;
    object-position: center center;
    height: 100%;
    width: 100%;
  }
}